version: '3'
services: 
  
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=webtiempo.py
    ports:
      - "80:5000"
    depends_on:
      - mongo
    volumes:
      - .:/entrega/entregadocker
    
  api:
    build:
      context: .
      dockerfile: Dockerfile-api
    container_name: api
    restart: always
    depends_on:
      - mongo

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: $(MONGO_USER)
      MONGO_INITDB_ROOT_PASSWORD: $(MONGO_PASS)
      MONGO_INITDB_DATABASE: $(MONGO_DB)
    volumes: 
      - mongo_data:/data/db

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=test
    ports:
      - '3000:3000'
    depends_on:
      - mongo
    volumes:
      - grafana_storage:/var/lib/grafana

  prometheus:
    image: prom/prometheus:v2.28.1
    container_name: prometheus
    restart: unless-stopped
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
    - prometheus-data:/prometheus
    ports:
    - '9090:9090'
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--storage.tsdb.path=/prometheus'
    - '--storage.tsdb.retention.time=1y'
    - '--web.enable-lifecycle'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    expose:
    - 8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro

    
volumes:
  mongo_data:
  grafana_storage: 
  prometheus-data: 
